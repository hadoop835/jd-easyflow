<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.easyflow.process.infrastructure.persistence.mapper.ProcessNodeExecutionMapper">
  <resultMap id="BaseResultMap" type="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="node_execution_no" jdbcType="VARCHAR" property="nodeExecutionNo" />
    <result column="node_instance_no" jdbcType="VARCHAR" property="nodeInstanceNo" />
    <result column="event_id" jdbcType="VARCHAR" property="eventId" />
    <result column="process_def_id" jdbcType="VARCHAR" property="processDefId" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="executor" jdbcType="VARCHAR" property="executor" />
    <result column="next_node_instances" jdbcType="VARCHAR" property="nextNodeInstances" />
    <result column="ext_data" jdbcType="OTHER" property="extData" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, node_execution_no, node_instance_no, event_id, process_def_id, node_id, start_time, 
    end_time, status, product_code, executor, next_node_instances, ext_data, created_date, 
    modified_date, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from process_node_execution
    where id = #{id,jdbcType=BIGINT} and deleted=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update process_node_execution set deleted=1
    where id = #{id,jdbcType=BIGINT} and deleted=0
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution" useGeneratedKeys="true">
    insert into process_node_execution (node_execution_no, node_instance_no, 
      event_id, process_def_id, node_id, 
      start_time, end_time, status, 
      product_code, executor, next_node_instances, 
      ext_data)
    values (#{nodeExecutionNo,jdbcType=VARCHAR}, #{nodeInstanceNo,jdbcType=VARCHAR}, 
      #{eventId,jdbcType=VARCHAR}, #{processDefId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{productCode,jdbcType=VARCHAR}, #{executor,jdbcType=VARCHAR}, #{nextNodeInstances,jdbcType=VARCHAR}, 
      #{extData,jdbcType=OTHER})
  </insert>
  <insert id="insertWithCreatedDate" keyColumn="id" keyProperty="id" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution" useGeneratedKeys="true">
    insert into process_node_execution (node_execution_no, node_instance_no, 
      event_id, process_def_id, node_id, 
      start_time, end_time, status, 
      product_code, executor, next_node_instances, 
      ext_data, created_date)
    values (#{nodeExecutionNo,jdbcType=VARCHAR}, #{nodeInstanceNo,jdbcType=VARCHAR}, 
      #{eventId,jdbcType=VARCHAR}, #{processDefId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{productCode,jdbcType=VARCHAR}, #{executor,jdbcType=VARCHAR}, #{nextNodeInstances,jdbcType=VARCHAR}, 
      #{extData,jdbcType=OTHER}, #{createdDate,jdbcType=TIMESTAMP})
  </insert>  
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution" useGeneratedKeys="true">
    insert into process_node_execution
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeExecutionNo != null">
        node_execution_no,
      </if>
      <if test="nodeInstanceNo != null">
        node_instance_no,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="processDefId != null">
        process_def_id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="executor != null">
        executor,
      </if>
      <if test="nextNodeInstances != null">
        next_node_instances,
      </if>
      <if test="extData != null">
        ext_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeExecutionNo != null">
        #{nodeExecutionNo,jdbcType=VARCHAR},
      </if>
      <if test="nodeInstanceNo != null">
        #{nodeInstanceNo,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="processDefId != null">
        #{processDefId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="executor != null">
        #{executor,jdbcType=VARCHAR},
      </if>
      <if test="nextNodeInstances != null">
        #{nextNodeInstances,jdbcType=VARCHAR},
      </if>
      <if test="extData != null">
        #{extData,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution">
    update process_node_execution
    <set>
      <if test="nodeExecutionNo != null">
        node_execution_no = #{nodeExecutionNo,jdbcType=VARCHAR},
      </if>
      <if test="nodeInstanceNo != null">
        node_instance_no = #{nodeInstanceNo,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="processDefId != null">
        process_def_id = #{processDefId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="executor != null">
        executor = #{executor,jdbcType=VARCHAR},
      </if>
      <if test="nextNodeInstances != null">
        next_node_instances = #{nextNodeInstances,jdbcType=VARCHAR},
      </if>
      <if test="extData != null">
        ext_data = #{extData,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT} and deleted=0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution">
    update process_node_execution
    set node_execution_no = #{nodeExecutionNo,jdbcType=VARCHAR},
      node_instance_no = #{nodeInstanceNo,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=VARCHAR},
      process_def_id = #{processDefId,jdbcType=VARCHAR},
      node_id = #{nodeId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      executor = #{executor,jdbcType=VARCHAR},
      next_node_instances = #{nextNodeInstances,jdbcType=VARCHAR},
      ext_data = #{extData,jdbcType=OTHER}
    where id = #{id,jdbcType=BIGINT} and deleted=0
  </update>
  
  <update id="updateByProcessNodeExecutionNo" parameterType="com.jd.easyflow.process.infrastructure.persistence.po.ProcessNodeExecution">
    update process_node_execution
    set 
      node_instance_no = #{nodeInstanceNo,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=VARCHAR},
      process_def_id = #{processDefId,jdbcType=VARCHAR},
      node_id = #{nodeId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      executor = #{executor,jdbcType=VARCHAR},
      next_node_instances = #{nextNodeInstances,jdbcType=VARCHAR},
      ext_data = #{extData,jdbcType=OTHER}
    where node_execution_no = #{nodeExecutionNo,jdbcType=VARCHAR} and deleted=0
  </update>  
  
  <select id="selectByNodeExecutionNo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from process_node_execution
    where node_execution_no = #{nodeExecutionNo} and deleted=0
  </select>
</mapper>